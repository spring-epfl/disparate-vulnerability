"""
Models architectures and parameters.
"""

from sklearn.base import BaseEstimator, TransformerMixin
from sklearn.neighbors import KNeighborsClassifier
from sklearn.pipeline import Pipeline
from sklearn.preprocessing import StandardScaler, OneHotEncoder, MinMaxScaler
from sklearn.model_selection import PredefinedSplit
from sklearn.model_selection import train_test_split, GridSearchCV
from sklearn.linear_model import LogisticRegression, LogisticRegressionCV
from sklearn.neural_network import MLPClassifier
from sklearn.naive_bayes import BernoulliNB, MultinomialNB
from sklearn.svm import SVC
from fair_models import LogisticRegressionThresholdOptimized

import diffprivlib.models as dp

num_classes = 2
lr_setup = dict(penalty='l2', solver='lbfgs', multi_class='ovr', n_jobs=1, max_iter=500)
model_zoo = {
    "lr": LogisticRegression(
        **lr_setup
    ),
    "fair_lr_eo": LogisticRegressionThresholdOptimized(
        **lr_setup
    ),
    "lr_ibm_eps1_dp": Pipeline([
        ('scaler', MinMaxScaler()),
        ('clf', dp.LogisticRegression(max_iter=lr_setup["max_iter"], epsilon=1))
    ]),
    "nn_6": MLPClassifier(
        activation="relu",
        hidden_layer_sizes=[6],
        alpha=0.01,
        solver="adam",
        max_iter=200
    ),
    "nn_100": MLPClassifier(
        activation="relu",
        hidden_layer_sizes=[100],
        solver="adam",
        max_iter=200
    ),
    "nn_500": MLPClassifier(
        activation="relu",
        hidden_layer_sizes=[500],
        solver="adam",
        max_iter=200
    ),
    ## Extremely Slow.
    # "svm": SVC(
    #     probability=True,
    #     C=0.1,
    #     kernel="rbf",
    # ),
}

renaming_dict = dict(
    lr_ibm_eps1_dp=r"DP LR, $\varepsilon=1$",
    lr="Logistic Regression (LR)",
    fair_lr_dmpr="Fair LR (Demographic Parity)",
    fair_lr_eo="Fair LR (Equalized Odds)",
    nn_6 = "6-Neuron NN",
    nn_50 = "50-Neuron NN",
    nn_100 = "100-Neuron NN",
    nn_500 = "500-Neuron NN",
)
