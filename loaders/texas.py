import numpy as np
import pandas as pd
from pandas.api.types import CategoricalDtype


def load_texas(path_template):
    """Load Texas Hospital Discharge dataset.
    Code is based on a script by Theresa Stadler.
    """
    cat_cols = [
        "TYPE_OF_ADMISSION",
        # "PAT_STATE",
        # "PAT_ZIP",
        "SEX_CODE",
        "RACE",
        "ETHNICITY",
        "ILLNESS_SEVERITY",
        # "ADMITTING_DIAGNOSIS",
        "PRINC_DIAG_CODE",
        "RISK_MORTALITY",
        # "PAT_STATUS",
        # "ADMIT_WEEKDAY",
        # "DISCHARGE",
    ]
    num_cols = [
        "LENGTH_OF_STAY",
        "PAT_AGE",
        "TOTAL_CHARGES",
        "TOTAL_NON_COV_CHARGES",
        # "TOTAL_CHARGES_ACCOMM",
        # "TOTAL_NON_COV_CHARGES_ACCOMM",
        # "TOTAL_CHARGES_ANCIL",
        # "TOTAL_NON_COV_CHARGES_ANCIL",
    ]

    dtype = {col: "category" for col in cat_cols}
    q1 = pd.read_csv(path_template % 1, delimiter="\t", dtype=dtype)
    # q2 = pd.read_csv(path_template % 2, delimiter="\t", dtype=dtype)
    # q3 = pd.read_csv(path_template % 3, delimiter="\t", dtype=dtype)
    # q4 = pd.read_csv(path_template % 4, delimiter="\t", dtype=dtype)

    q1_clean = q1[cat_cols + num_cols]
    # q2_clean = q2[cat_cols + num_cols]
    # q3_clean = q3[cat_cols + num_cols]
    # q4_clean = q4[cat_cols + num_cols]
    combined_df = pd.concat([
        q1_clean,
        # q2_clean,
        # q3_clean,
        # q4_clean
    ])

    for c in cat_cols + num_cols:
        combined_df.loc[combined_df[c].astype(str) == "`", c] = pd.NA

    c = "TYPE_OF_ADMISSION"
    combined_df.loc[combined_df[c].notnull(), c] = (
        combined_df.loc[combined_df[c].notnull(), c]
        .astype(str)
        .apply(lambda x: x.split(".")[0])
    )

    # Patient status
    # def strip_zeros(x):
    #     s = x.split("0")
    #     if len(s) > 1:
    #         if s[0] == "":
    #             return s[1]
    #         else:
    #             return x
    #     else:
    #         return x

    # c = "PAT_STATUS"
    # combined_df.loc[combined_df[c].notnull(), c] = (
    #     combined_df.loc[combined_df[c].notnull(), c]
    #     .astype("str")
    #     .apply(lambda x: x.split(".")[0])
    #     .apply(lambda x: strip_zeros(x))
    #     .astype("category")
    # )

    c = "RACE"
    combined_df.loc[combined_df[c].notnull(), c] = (
        combined_df.loc[combined_df[c].notnull(), c]
    )

    c = "ETHNICITY"
    combined_df.loc[combined_df[c].notnull(), c] = (
        combined_df.loc[combined_df[c].notnull(), c]
        .astype("str")
        .apply(lambda x: x.split(".")[0])
    )

    c = "PAT_AGE"
    combined_df.loc[combined_df[c].notnull(), c] = combined_df.loc[
        combined_df[c].notnull(), c
    ].astype(np.float32)

    combined_df[cat_cols] = combined_df[cat_cols].astype("category")

    return combined_df
